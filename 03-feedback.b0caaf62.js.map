{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAmB,sBACnBC,EAAaH,SAASC,cAAc,uBACpCG,EAAkBJ,SAASC,cAAc,4BAG/CF,EAAKM,iBACH,SACA,EAAAR,EAAAS,WAAS,SAAAC,GAEgD,IAAjDC,EAAe,CAAEC,MAAON,EAAWO,MAAOC,QAASP,EAAgBM,OAGxCE,aAApBC,QAAQX,EAAkBY,KAAKC,UAAUP,G,GACrD,MAqBLT,EAAKM,iBAAiB,UACtB,SAAmBE,GAEf,GADAA,EAAES,iBACuB,KAArBb,EAAWO,OAA0C,KAA1BN,EAAgBM,MAC3C,OAAOO,MAAM,uBAGDC,QAARC,IAAI,CAAEV,MAAON,EAAWO,MAAOC,QAASP,EAAgBM,QAOhEE,aAAaQ,WAAWlB,GACxBC,EAAWO,MAAQ,GACrBN,EAAgBM,MAAQ,E,IAO1B,IAAMW,EArCO,SAAAC,GACT,IACI,IAAMC,EAAkBX,aAAaY,QAAQF,GAEL,IAAnCC,EAAiB,OAEtB,OAAOT,KAAKW,MAAMF,E,CACpB,MAAOG,GAGL,YADqCR,QAA7BQ,MAAM,oBAAqBA,EAAMf,Q,EA4B7BgB,CAAKzB,GACzB,GAAImB,EAAa,CACb,IAAQO,EAA+CP,EAA/CZ,MAAoBoB,EAA2BR,EAA3BV,QAC5BR,EAAWO,MAAQkB,EACnBxB,EAAgBM,MAAQmB,C","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\nconst emailInput = document.querySelector('input[name=\"email\"]');\nconst messageTextarea = document.querySelector('textarea[name=\"message\"]');\n\n\nform.addEventListener(\n  'input',\n  throttle(e => {\n    // Об'єкт з полями email і message, у яких зберігаються поточні значення полів форми\n    const objectToSave = { email: emailInput.value, message: messageTextarea.value };\n    // Записування у локальне сховище об'єкта з полями.\n    // JSON.stringify - конвертування JS-значень у формат строки JSON.\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n  }, 500)\n);\n\n\n\n\n// Метод load який абстрагує повторюваний код перевірки помилок\nconst load = key => {\n    try {\n        const serializedState = localStorage.getItem(key);\n        // перевіряю чи данні не порожні якщо так повертаю undefined\n        if (!serializedState) return undefined;\n\n        return JSON.parse(serializedState)\n    } catch (error) {\n        // повертається повідомлення підчас помилки\n        console.error('Get state error: ', error.message);\n        return undefined;\n    }\n};\n\nform.addEventListener('submit', onSubmit);\nfunction onSubmit (e) {\n    e.preventDefault();\n    if (emailInput.value === '' || messageTextarea.value === '') {\n        return alert('Заповніть всі поля!');\n    }\n\n    console.log({ email: emailInput.value, message: messageTextarea.value });\n        clearForm();\n}\n\n\nfunction clearForm () {\n\n    localStorage.removeItem(LOCALSTORAGE_KEY);\n    emailInput.value = '';\n  messageTextarea.value = '';\n}\n\n// перевірка сховища \n\n//  заповнювати поля данними якщо в сховищі є данні\n\nconst storageData = load(LOCALSTORAGE_KEY);\nif (storageData) {\n    const { email: storedEmail, message: storedMessage } = storageData;\n    emailInput.value = storedEmail;\n    messageTextarea.value = storedMessage;\n}\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$LOCALSTORAGE_KEY","$b00c40859be242c5$var$emailInput","$b00c40859be242c5$var$messageTextarea","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","alert","console","log","removeItem","$b00c40859be242c5$var$storageData","key","serializedState","getItem","parse","error","$b00c40859be242c5$var$load","$b00c40859be242c5$var$storedEmail","$b00c40859be242c5$var$storedMessage"],"version":3,"file":"03-feedback.b0caaf62.js.map"}