{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,kBAE9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAkBH,SAASC,cAAc,4BAG/CF,EAAKK,iBACH,SACA,EAAAP,EAAAQ,WAASC,IAEgD,MAAjDC,EAAe,CAAEC,MAAON,EAAWO,MAAOC,QAASP,EAAgBM,OAGxCE,aAApBC,QAZQ,sBAYkBC,KAAKC,UAAUP,GAAc,GACnE,MAqBLR,EAAKK,iBAAiB,UACtB,SAAmBE,GAEf,GADAA,EAAES,iBACuB,KAArBb,EAAWO,OAA0C,KAA1BN,EAAgBM,MAC3C,OAAOO,MAAM,uBAGDC,QAARC,IAAI,CAAEV,MAAON,EAAWO,MAAOC,QAASP,EAAgBM,QAOhEE,aAAaQ,WAhDQ,uBAiDrBjB,EAAWO,MAAQ,GACrBN,EAAgBM,MAAQ,E,IAO1B,MAAMW,EArCO,CAAAC,IACT,IACI,MAAMC,EAAkBX,aAAaY,QAAQF,GAEL,IAAnCC,EAAiB,OAEtB,OAAOT,KAAKW,MAAMF,E,CACpB,MAAOG,GAGL,YADqCR,QAA7BQ,MAAM,oBAAqBA,EAAMf,Q,GA4B7BgB,CAzDK,uBA0DzB,GAAIN,EAAa,CACb,MAAQZ,MAAOmB,EAAajB,QAASkB,GAAkBR,EACvDlB,EAAWO,MAAQkB,EACnBxB,EAAgBM,MAAQmB,C","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\nconst emailInput = document.querySelector('input[name=\"email\"]');\nconst messageTextarea = document.querySelector('textarea[name=\"message\"]');\n\n\nform.addEventListener(\n  'input',\n  throttle(e => {\n    // Об'єкт з полями email і message, у яких зберігаються поточні значення полів форми\n    const objectToSave = { email: emailInput.value, message: messageTextarea.value };\n    // Записування у локальне сховище об'єкта з полями.\n    // JSON.stringify - конвертування JS-значень у формат строки JSON.\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n  }, 500)\n);\n\n\n\n\n// Метод load який абстрагує повторюваний код перевірки помилок\nconst load = key => {\n    try {\n        const serializedState = localStorage.getItem(key);\n        // перевіряю чи данні не порожні якщо так повертаю undefined\n        if (!serializedState) return undefined;\n\n        return JSON.parse(serializedState)\n    } catch (error) {\n        // повертається повідомлення підчас помилки\n        console.error('Get state error: ', error.message);\n        return undefined;\n    }\n};\n\nform.addEventListener('submit', onSubmit);\nfunction onSubmit (e) {\n    e.preventDefault();\n    if (emailInput.value === '' || messageTextarea.value === '') {\n        return alert('Заповніть всі поля!');\n    }\n\n    console.log({ email: emailInput.value, message: messageTextarea.value });\n        clearForm();\n}\n\n\nfunction clearForm () {\n\n    localStorage.removeItem(LOCALSTORAGE_KEY);\n    emailInput.value = '';\n  messageTextarea.value = '';\n}\n\n// перевірка сховища \n\n//  заповнювати поля данними якщо в сховищі є данні\n\nconst storageData = load(LOCALSTORAGE_KEY);\nif (storageData) {\n    const { email: storedEmail, message: storedMessage } = storageData;\n    emailInput.value = storedEmail;\n    messageTextarea.value = storedMessage;\n}\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$emailInput","$945622fd0f572e60$var$messageTextarea","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","alert","console","log","removeItem","$945622fd0f572e60$var$storageData","key","serializedState","getItem","parse","error","$945622fd0f572e60$var$load","storedEmail","storedMessage"],"version":3,"file":"03-feedback.b6def44d.js.map"}