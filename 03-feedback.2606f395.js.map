{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,kBAE9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAkBH,SAASC,cAAc,4BAG/C,IAAIG,EAAO,GAEXL,EAAKM,iBAAiB,SAAS,EAAAR,EAAAS,WAK/B,SAAiBC,GACbH,EAAKG,EAAEC,OAAOC,MAAQL,EAAKG,EAAEC,OAAOE,OAEpCC,aAAaC,QAfQ,sBAgBjBC,KAAKC,UAAU,CAAEC,MAAOX,EAAKW,MAAOC,QAASZ,EAAKY,U,GATT,MACjDjB,EAAKM,iBAAiB,UA2BtB,SAAmBE,GAEf,GADAA,EAAEU,iBACuB,KAArBf,EAAWQ,OAA0C,KAA1BP,EAAgBO,MAC3C,OAAOQ,MAAM,uBAGDC,QAARC,IAAI,CAAEL,MAAOb,EAAWQ,MAAOM,QAASb,EAAgBO,QAMhEN,EAAO,GACPO,aAAaU,WAhDQ,uBAiDrBnB,EAAWQ,MAAQ,GACrBP,EAAgBO,MAAQ,E,IAO1B,MAAMY,EArCO,CAAAC,IACT,IACI,MAAMC,EAAkBb,aAAac,QAAQF,GAEL,IAAnCC,EAAiB,OAEtB,OAAOX,KAAKa,MAAMF,E,CACpB,MAAOG,GAGL,YADqCR,QAA7BQ,MAAM,oBAAqBA,EAAMX,Q,GA4B7BY,CAzDK,uBA0DzB,GAAIN,EAAa,CACb,MAAQP,MAAOc,EAAab,QAASc,GAAkBR,EACvDpB,EAAWQ,MAAQmB,EACnB1B,EAAgBO,MAAQoB,C","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n\nconst form = document.querySelector('.feedback-form');\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\nconst emailInput = document.querySelector('input[name=\"email\"]');\nconst messageTextarea = document.querySelector('textarea[name=\"message\"]');\n\n\nlet data = {};\n\nform.addEventListener('input', throttle(onInput, 500));\nform.addEventListener('submit', onSubmit);\n\n\n\nfunction onInput(e) {\n    data[e.target.name] = data[e.target.value]\n\n    localStorage.setItem(LOCALSTORAGE_KEY,\n        JSON.stringify({ email: data.email, message: data.message }));\n}\n\n// Метод load який абстрагує повторюваний код перевірки помилок\nconst load = key => {\n    try {\n        const serializedState = localStorage.getItem(key);\n        // перевіряю чи данні не порожні якщо так повертаю undefined\n        if (!serializedState) return undefined;\n\n        return JSON.parse(serializedState)\n    } catch (error) {\n        // повертається повідомлення підчас помилки\n        console.error('Get state error: ', error.message);\n        return undefined;\n    }\n};\n\n\nfunction onSubmit (e) {\n    e.preventDefault();\n    if (emailInput.value === '' || messageTextarea.value === '') {\n        return alert('Заповніть всі поля!');\n    }\n\n    console.log({ email: emailInput.value, message: messageTextarea.value });\n        clearForm();\n}\n\n\nfunction clearForm () {\n    data = {}\n    localStorage.removeItem(LOCALSTORAGE_KEY);\n    emailInput.value = '';\n  messageTextarea.value = '';\n}\n\n// перевірка сховища \n\n//  заповнювати поля данними якщо в сховищі є данні\n\nconst storageData = load(LOCALSTORAGE_KEY);\nif (storageData) {\n    const { email: storedEmail, message: storedMessage } = storageData;\n    emailInput.value = storedEmail;\n    messageTextarea.value = storedMessage;\n}\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$emailInput","$945622fd0f572e60$var$messageTextarea","$945622fd0f572e60$var$data","addEventListener","throttle","e","target","name","value","localStorage","setItem","JSON","stringify","email","message","preventDefault","alert","console","log","removeItem","$945622fd0f572e60$var$storageData","key","serializedState","getItem","parse","error","$945622fd0f572e60$var$load","storedEmail","storedMessage"],"version":3,"file":"03-feedback.2606f395.js.map"}